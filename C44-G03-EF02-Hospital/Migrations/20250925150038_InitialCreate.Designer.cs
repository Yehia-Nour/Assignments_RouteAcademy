// <auto-generated />
using System;
using C44_G03_EF02_Hospital.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace C44_G03_EF02_Hospital.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    [Migration("20250925150038_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consultants");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Drug", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Drugs");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Nurse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WardId");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConsultantId");

                    b.HasIndex("WardId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Prescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DrugId")
                        .HasColumnType("int");

                    b.Property<int>("NurseId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("DrugId");

                    b.HasIndex("NurseId");

                    b.HasIndex("PatientId");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Ward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NurseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NurseId")
                        .IsUnique();

                    b.ToTable("Wards");
                });

            modelBuilder.Entity("ConsultantPatient", b =>
                {
                    b.Property<int>("ConsultantsId")
                        .HasColumnType("int");

                    b.Property<int>("PatientsExamineId")
                        .HasColumnType("int");

                    b.HasKey("ConsultantsId", "PatientsExamineId");

                    b.HasIndex("PatientsExamineId");

                    b.ToTable("Examine", (string)null);
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Nurse", b =>
                {
                    b.HasOne("C44_G03_EF02_Hospital.Models.Ward", "Ward")
                        .WithMany("Nurses")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Patient", b =>
                {
                    b.HasOne("C44_G03_EF02_Hospital.Models.Consultant", "Consultant")
                        .WithMany("PatientsAssigne")
                        .HasForeignKey("ConsultantId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("C44_G03_EF02_Hospital.Models.Ward", "Ward")
                        .WithMany("Patients")
                        .HasForeignKey("WardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Consultant");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Prescription", b =>
                {
                    b.HasOne("C44_G03_EF02_Hospital.Models.Drug", "Drug")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DrugId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("C44_G03_EF02_Hospital.Models.Nurse", "Nurse")
                        .WithMany("Prescriptions")
                        .HasForeignKey("NurseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("C44_G03_EF02_Hospital.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Drug");

                    b.Navigation("Nurse");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Ward", b =>
                {
                    b.HasOne("C44_G03_EF02_Hospital.Models.Nurse", "Nurse")
                        .WithOne("WardManage")
                        .HasForeignKey("C44_G03_EF02_Hospital.Models.Ward", "NurseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nurse");
                });

            modelBuilder.Entity("ConsultantPatient", b =>
                {
                    b.HasOne("C44_G03_EF02_Hospital.Models.Consultant", null)
                        .WithMany()
                        .HasForeignKey("ConsultantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("C44_G03_EF02_Hospital.Models.Patient", null)
                        .WithMany()
                        .HasForeignKey("PatientsExamineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Consultant", b =>
                {
                    b.Navigation("PatientsAssigne");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Drug", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Nurse", b =>
                {
                    b.Navigation("Prescriptions");

                    b.Navigation("WardManage")
                        .IsRequired();
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Patient", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("C44_G03_EF02_Hospital.Models.Ward", b =>
                {
                    b.Navigation("Nurses");

                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
